{"version":3,"file":"static/js/228.97f66058.chunk.js","mappings":"uMAGO,MAAMA,EAAmBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qMAW7BC,EAAgBJ,EAAAA,EAAOK,EAACC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iEAG1BI,EAAAA,GAAOC,M,8DCPX,MAAMC,EAAUA,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAQzB,QAAEC,EAAO,gBAAEC,EAAe,YAAEC,EAAW,mBAAEC,EAAkB,iBAAEC,IAAqBC,EAAAA,EAAAA,IAAWR,EAP5E,CACnBS,KAAM,GACNC,eAAgB,GAChBC,WAAY,GACZC,WAAY,KAIVC,EAAQ,IAAI,IAAIC,IAAId,EAAWe,KAAKC,GAAWA,EAAOP,SACtDQ,EAAS,IAAI,IAAIH,IAAId,EAAWe,KAAKC,GAAWA,EAAOE,YAAYC,QAAQ,IAAK,QAChFC,EAAU,IAAI,IAAIN,IAAId,EAAWe,KAAKC,GAAWA,EAAOI,YACxDT,EAAaU,KAAKC,OAAOF,GACzBR,EAAaS,KAAKE,OAAOH,GAM/B,OAJAI,EAAAA,EAAAA,YAAU,KACN1B,GAAS2B,EAAAA,EAAAA,KAAW,GACrB,CAAC3B,KAGC4B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACHF,EAAAA,EAAAA,MAACvC,EAAgB,CAAAyC,SAAA,EACfC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CACXjB,MAAOA,EACPI,OAAQA,EACRN,WAAYA,EACZC,WAAYA,EACZmB,eAAgBzB,EAChBH,QAASA,EACT6B,aAAczB,IAEfF,EACCD,EAAgB6B,OAAS,GACvBJ,EAAAA,EAAAA,KAACK,EAAAA,EAAW,CAAC9B,gBAAiBA,KAE9ByB,EAAAA,EAAAA,KAACrC,EAAa,CAAAoC,SAAC,iDAKjBC,EAAAA,EAAAA,KAACK,EAAAA,EAAW,CAACC,QAASnC,QAG1B6B,EAAAA,EAAAA,KAACO,EAAAA,GAAc,MACd,EAIP,G","sources":["pages/Catalog/Catalog.styled.js","pages/Catalog/Catalog.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { colors } from \"utils\";\n\nexport const CatalogContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  max-width: 1184px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n  min-height: 65vh;\n`;\n\nexport const ResultMessage = styled.p`\n  margin-top: 50px;\n  font-size: 24px;\n  color: ${colors.gray};\n`;\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CatalogContainer, ResultMessage } from \"./Catalog.styled\";\nimport { AdvertsList } from \"../../components/AdvertsList/AdvertsList\";\nimport { FilteredForm } from \"components/FilteredForm/FilteredForm\";\nimport { getAdverts } from 'redux/adverts/selectors';\nimport { fetchAll } from 'redux/adverts/operations';\nimport { useCatalog } from \"../../utils\";\nimport { ToastContainer } from \"react-toastify\";\n\nexport const Catalog = () => {\n    const dispatch = useDispatch();\n    const allAdverts = useSelector(getAdverts);\n    const initialFilters = {\n        make: '',\n        filteredPrices: [],\n        minMileage: '',\n        maxMileage: '',\n    };\n\n    const { filters, filteredAdverts, isFiltering, handleFilterChange, handleResetClick } = useCatalog(allAdverts, initialFilters);\n    const makes = [...new Set(allAdverts.map((advert) => advert.make))];\n    const prices = [...new Set(allAdverts.map((advert) => advert.rentalPrice.replace('$', '')))];\n    const mileage = [...new Set(allAdverts.map((advert) => advert.mileage))];\n    const minMileage = Math.min(...mileage);\n    const maxMileage = Math.max(...mileage);\n\n    useEffect(() => {\n        dispatch(fetchAll());\n    }, [dispatch]);\n\n    return (\n         <>\n      <CatalogContainer>\n        <FilteredForm\n          makes={makes}\n          prices={prices}\n          minMileage={minMileage}\n          maxMileage={maxMileage}\n          onFilterChange={handleFilterChange}\n          filters={filters}\n          onResetClick={handleResetClick}\n        />\n        {isFiltering ? (\n          filteredAdverts.length > 0 ? (\n            <AdvertsList filteredAdverts={filteredAdverts} />\n          ) : (\n            <ResultMessage>\n              No results found for the selected criteria.\n            </ResultMessage>\n          )\n        ) : (\n          <AdvertsList adverts={allAdverts} />\n        )}\n      </CatalogContainer>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Catalog;"],"names":["CatalogContainer","styled","div","_templateObject","_taggedTemplateLiteral","ResultMessage","p","_templateObject2","colors","gray","Catalog","dispatch","useDispatch","allAdverts","useSelector","getAdverts","filters","filteredAdverts","isFiltering","handleFilterChange","handleResetClick","useCatalog","make","filteredPrices","minMileage","maxMileage","makes","Set","map","advert","prices","rentalPrice","replace","mileage","Math","min","max","useEffect","fetchAll","_jsxs","_Fragment","children","_jsx","FilteredForm","onFilterChange","onResetClick","length","AdvertsList","adverts","ToastContainer"],"sourceRoot":""}